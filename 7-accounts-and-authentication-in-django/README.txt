<h1 class="gamut-1ewwict-Text e8i0p5k0">Django's Accounts for Admins and Users</h1><p class="gamut-1xdcsrc-Text e8i0p5k0"><span data-testid="markdown" class="markdown__32VfO5X72_8Hgq-lL1FiEX">What hasn’t Django thought of? Learn how Django lets you create users and admins and implements a signup and login process. </span></p><div class="gamut-unqu21-Box-ArticleContentContainer e1xfx7rd1"><div data-testid="markdown" class="spacing-loose__3_R8mSIQ2cspwhDGkCOXTu markdown__32VfO5X72_8Hgq-lL1FiEX darkTheme__1DQKVxwlUlCBpualn71c3Z gamut-gk1onf-ArticleMarkdown e1xfx7rd0"><p class="p__1qg33Igem5pAgn4kPMirjw">You’ve set up your site for your users but what about those who need to maintain the site? You have to think about the super users who need extra permissions to protect your site and make sure it’s running smoothly! </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Well, Django’s thought about this too and offers you the ability to create an admin account and access through the <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code> route. As an admin, you can perform all CRUD functionalities on your data!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Additionally, to safeguard your site, you might want users to make their own accounts. Authenticating users gives you the peace of mind that actual users are interacting with your site.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s see how Django provides these core components for us.</p>
</div></div>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">What is Authentication? What's Django Admin?</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Authentication is used in applications in order to verify who is attempting to access information from the server. The process of authenticating a user involves associating an incoming request with a set of credentials (username, email, password) and comparing them against what’s on file in the app’s database. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s consider an e-commerce site that we visit frequently and want to create an account on. When we register an account the first time, we fill out a form with all of our information (email, username, password, etc.) and click on a button, “Sign Up”. Once the button is clicked, the information from the form is captured and sent as a request to the server. From there, the server checks if we’re a new user and if it needs to create a new record in the database with our information. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">After we’re registered, the next time we visit the site and “Log In”, a request is sent back to the server to check if a user with the same information already exists in the database, and if so, grants us permission to the site.  </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In this lesson, we’ll learn:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">How to create a <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">How an authenticated user stays authenticated.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">How to make use of the “superuser” object.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">How to use the Admin interface. </li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">Django allows us to handle and manage user authentication very seamlessly by using numerous built-in functions. We also have the option of accessing the Admin interface by visiting the route: <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code> in order to manage all the records in our database. </p>
</div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Admin Account</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In an earlier lesson, we explored one of Django’s most powerful features, the <em>admin interface</em>. The admin interface is a management tool that gives us control of creating, updating, reading, and deleting records from our database. This makes it very easy to test our models and ensure that we’re retrieving or creating data correctly. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In order to access the Admin interface, we must first programmatically create a superuser. In Django, a <em>superuser</em> has the permissions to freely control data. To create a superuser, we can type the following command in our terminal:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="plaintext" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk1">python3 manage.py createsuperuser</span></span><br></div></code></pre></pre><p class="p__1qg33Igem5pAgn4kPMirjw">The shell will prompt us to type in a username, email, and password. Once completed, we can navigate to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code> route and log in with the credentials we just used to create our superuser. If we get redirected to the index page, that means our login was successful!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">It’s imperative to not share this information with anyone since the admin account has complete control of all your records in the database. In case you forget your admin username you can always reset through the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/contrib/auth/"><code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object</a>.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s start by creating a superuser!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In the terminal, type the command to create a superuser. Use the following credentials:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Username: <code class="code__2rdF32qjRVp7mMVBHuPwDS">admin</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Email: <code class="code__2rdF32qjRVp7mMVBHuPwDS">admin@vetoffice.com</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Password: <code class="code__2rdF32qjRVp7mMVBHuPwDS">admin123</code></li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once you run the command and create a new superuser, click on “Check Work” to make sure you added the correct input.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><strong>NOTE</strong>: When entering the password, you will be warned that the password and username are too similar. Bypass this warning by typing <code class="code__2rdF32qjRVp7mMVBHuPwDS">y</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw"> Run the application and navigate to the admin interface. Log in with your created credentials.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Registering Tables in Admin</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have access to the admin interface, let’s explore how we can use it to interact with our database records. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Consider an application that keeps track of all the books we’ve read. Within our application, we have a model called <code class="code__2rdF32qjRVp7mMVBHuPwDS">Book</code> that holds information about each book (title, author, date of publication, etc). </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In order to be able to interact with a database table through the admin interface, we first need to register the model. Registering and configuring a model is done by adding the models into the app’s <strong>admin.py</strong> file.</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># myapp_root/book_catalog/admin.py</span></span><br><span><span> </span></span><br><span><span class="mtk12">from</span><span class="mtk1"> .</span><span class="mtk10">models</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">Book</span></span><br><span><span> </span></span><br><span><span class="mtk9">admin</span><span class="mtk1">.</span><span class="mtk10">site</span><span class="mtk9">.</span><span class="mtk10">register</span><span class="mtk1">(</span><span class="mtk9">Book</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Notice that we’ve first imported the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Book</code> model. Then we called the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Admin_site#registering_models"><code class="code__2rdF32qjRVp7mMVBHuPwDS">register()</code> method</a>:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk9">admin</span><span class="mtk1">.</span><span class="mtk10">site</span><span class="mtk9">.</span><span class="mtk10">register</span><span class="mtk1">(</span><span class="mtk9">Book</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">After we save our <strong>admin.py</strong> file, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code> route will display our registered model, <code class="code__2rdF32qjRVp7mMVBHuPwDS">Book</code>. If we registered more models, they would be grouped by the installed application. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">From the <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code> page, we can click on the collection of <code class="code__2rdF32qjRVp7mMVBHuPwDS">Books</code> and we’ll be directed to a table that shows us all the information and records held in this database table. Now we’re able to manually create, update, read, or delete any record using the admin interface! </p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><strong>Note</strong>: It’s important to remember that the admin interface is not something to be shared with any user. We wouldn’t want all of our users to have access to the interface and manipulate records as they wish!</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s make sure we can interact with our <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Patient</code> models within the Admin interface!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Start by importing the models <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Patient</code> in <strong>/vetoffice/admin.py</strong>. </p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Once imported register both models to the admin interface using the <code class="code__2rdF32qjRVp7mMVBHuPwDS">register()</code> method.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In the admin interface, login with the admin user credentials (username: <code class="code__2rdF32qjRVp7mMVBHuPwDS">admin</code>, password: <code class="code__2rdF32qjRVp7mMVBHuPwDS">admin123</code>) and make sure the tables are populated. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Using the admin interface, you can manipulate the model instances using any CRUD functionality!</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">User Objects</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">We’ve seen how powerful Django’s admin interface is in order to manipulate records in our database. However, this is not the only way! </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In the shell, we can manage our users programmatically using one of the core objects in Django’s authentication system, the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/topics/auth/default/#user-objects"><code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object</a>. The object can be imported from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.contrib.auth.models</code> and comes with a number of helper methods including one to create users, <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/contrib/auth/#django.contrib.auth.models.UserManager.create_user"><code class="code__2rdF32qjRVp7mMVBHuPwDS">.create_user()</code></a>. This method can take a username, email, and password as arguments:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk9">user</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">User</span><span class="mtk1">.</span><span class="mtk10">objects</span><span class="mtk9">.</span><span class="mtk10">create_user</span><span class="mtk1">(</span><span class="mtk9">username</span><span class="mtk1">=</span><span class="mtk8">"myusername"</span><span class="mtk1">, </span><span class="mtk9">email</span><span class="mtk1">=</span><span class="mtk8">"myemail@crazymail.com"</span><span class="mtk1">, </span><span class="mtk9">password</span><span class="mtk1">=</span><span class="mtk8">"mypassword"</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">.create_user()</code> method will automatically create and save the user to the database. We also gain a security feature because this method also automatically <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://en.wikipedia.org/wiki/Cryptographic_hash_function">hashes</a> the password so it’s not stored as a plain string value in the database. Moreover, we can call the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/models/instances/#saving-objects"><code class="code__2rdF32qjRVp7mMVBHuPwDS">.save()</code></a> method in order to save the user object back to the database if we make any further changes.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Moreover,  the <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object also contains other primary attributes such as: <code class="code__2rdF32qjRVp7mMVBHuPwDS">first_name</code>, <code class="code__2rdF32qjRVp7mMVBHuPwDS">last_name</code>, <code class="code__2rdF32qjRVp7mMVBHuPwDS">email</code>, <code class="code__2rdF32qjRVp7mMVBHuPwDS">username</code>, and <code class="code__2rdF32qjRVp7mMVBHuPwDS">password</code>. Additionally, we can handle a wide range of tasks from updating a user’s email address, to changing their password or even deleting a user.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><strong>Note:</strong> When working with the Python shell, if you want to exit at any time you can type <kbd>Ctrl</kbd>+<kbd>Z</kbd> on Windows, <kbd>Ctrl</kbd>+<kbd>D</kbd> on Mac or type and run <code class="code__2rdF32qjRVp7mMVBHuPwDS">exit()</code>.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In the terminal, open the Python shell and import the <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Create a new user object with the following attributes:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Username: <code class="code__2rdF32qjRVp7mMVBHuPwDS">"tom100"</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Email: <code class="code__2rdF32qjRVp7mMVBHuPwDS">"tom@codecademy.com"</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Password: <code class="code__2rdF32qjRVp7mMVBHuPwDS">"codec@demy123"</code></li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">Store the user in a variable called <code class="code__2rdF32qjRVp7mMVBHuPwDS">user</code>. Once created, make sure to save the user variable in the database.</p>
<blockquote class="blockquote__Bo1k0tPllp684-m2XzKRP">
<p class="p__1qg33Igem5pAgn4kPMirjw">Note: If your screen size doesn’t allow for the commands to fit on a single line, the tests in this exercise may fail. To ensure that tests are working properly, please stretch out the length of the Terminal to fit any commands into a single line. </p>
</blockquote>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Authenticating Users</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">We know that authenticating a user entails matching credentials sent from the client against the server’s stored data. If the information matches, then access will be granted.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">The process of authenticating a user is all done on the server-side of our applications. To be more specific, we can add this logic in a view function that will accept credentials and make use of the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/topics/auth/default/#django.contrib.auth.authenticate"><code class="code__2rdF32qjRVp7mMVBHuPwDS">authenticate()</code> function</a> to verify a user.   </p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><code class="code__2rdF32qjRVp7mMVBHuPwDS">authenticate()</code> takes credentials as keyword arguments, with <code class="code__2rdF32qjRVp7mMVBHuPwDS">username</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">password</code> for the default case. If the credentials are valid, a <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object will be returned, otherwise, a <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/exceptions/#permissiondenied"><code class="code__2rdF32qjRVp7mMVBHuPwDS">PermissionDenied</code> exception</a> is raised which returns <code class="code__2rdF32qjRVp7mMVBHuPwDS">None</code>. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">We can capture the fields from a log in form with <code class="code__2rdF32qjRVp7mMVBHuPwDS">request.POST</code>, which is a dictionary-like object that lets you access submitted data by key name. If we have a  field for <code class="code__2rdF32qjRVp7mMVBHuPwDS">username</code>, we can retrieve that value with <code class="code__2rdF32qjRVp7mMVBHuPwDS">request.POST["username"]</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s break down how this function would work:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">authenticate</span></span><br><span><span> </span></span><br><span><span class="mtk12">def login_view</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk16"># Both username and password are captured from the</span><span class="mtk16"> submitted log in form</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">username</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">request</span><span class="mtk1">.</span><span class="mtk10">POST</span><span class="mtk1">[</span><span class="mtk8">"username"</span><span class="mtk1">]</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">password</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">request</span><span class="mtk1">.</span><span class="mtk10">POST</span><span class="mtk1">[</span><span class="mtk8">"password"</span><span class="mtk1">]</span></span><br><span><span> </span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk16"># Both username and password are passed into the a</span><span class="mtk16">uthenticate() method to verify the user</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">user</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">authenticate</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk9">username</span><span class="mtk1">=</span><span class="mtk9">username</span><span class="mtk1">, </span><span class="mtk9">password</span><span class="mtk1">=</span><span class="mtk9">password</span><span class="mtk1">)</span></span><br><span><span> </span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk16"># If the user is valid, then a&nbsp;user object is retu</span><span class="mtk16">rned.</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">if</span><span class="mtk1"> </span><span class="mtk9">user</span><span class="mtk1"> </span><span class="mtk12">is</span><span class="mtk1"> </span><span class="mtk12">not</span><span class="mtk1"> </span><span class="mtk12">None</span><span class="mtk1">:</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk16"># Log in user and redirect them</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk12">return</span><span class="mtk1"> </span><span class="mtk9">redirect</span><span class="mtk1">(</span><span class="mtk8">"home.html"</span><span class="mtk1">)</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">else</span><span class="mtk1">:</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk12">return</span><span class="mtk1"> </span><span class="mtk9">HttpResponse</span><span class="mtk1">(</span><span class="mtk8">"Invalid credentials!"</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">In the code above we first import <code class="code__2rdF32qjRVp7mMVBHuPwDS">authenticate</code> from the <code class="code__2rdF32qjRVp7mMVBHuPwDS">auth</code> library provided by Django. We then store the values of our username and password provided from the log in form with <code class="code__2rdF32qjRVp7mMVBHuPwDS">request.POST</code> into variables, <code class="code__2rdF32qjRVp7mMVBHuPwDS">username</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">password</code> respectively.  </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once those values are stored in variables, we can then pass them as arguments into the <code class="code__2rdF32qjRVp7mMVBHuPwDS">authenticate</code> function:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk9">authenticate</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk9">username</span><span class="mtk1">=</span><span class="mtk9">username</span><span class="mtk1">, </span><span class="mtk9">password</span><span class="mtk1">=</span><span class="mtk9">password</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">For best practices, we make use of an <code class="code__2rdF32qjRVp7mMVBHuPwDS">if</code>/<code class="code__2rdF32qjRVp7mMVBHuPwDS">else</code> statement to check if the user was authenticated successfully. This allows us to handle any exceptions in case an unauthenticated user tries to log in. If the credentials were valid, and a <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object is returned, we can log them in (we’ll look into this in the next lesson) and redirect them to a new page. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Notice how we’re making use of a handy function provided by Django, <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#redirect"><code class="code__2rdF32qjRVp7mMVBHuPwDS">redirect()</code></a>. This function is imported from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.shortcuts</code> and allows us to redirect a user to a specific view by passing in the name of a view.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Otherwise, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">else</code> code block is executed and sends an <code class="code__2rdF32qjRVp7mMVBHuPwDS">HttpResponse with the text</code>“Invalid credentials!”`.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">With just a few lines of code, Django allows us to authenticate users seamlessly!</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">We’ve provided you with a login method, however, the logic to log in users is incomplete.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">authenticate()</code> method with <code class="code__2rdF32qjRVp7mMVBHuPwDS">username</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">password</code> as arguments. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Make sure to store the result in a variable called <code class="code__2rdF32qjRVp7mMVBHuPwDS">user</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Within the mini-browser attempt to log in with the user credentials from the previous lesson:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Username: <code class="code__2rdF32qjRVp7mMVBHuPwDS">tom100</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Password: <code class="code__2rdF32qjRVp7mMVBHuPwDS">codec@demy123</code></li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Log In</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">After a user object is created, they can use those credentials to log in to gain access to the site.  In order to log in a user, we can make use of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login()</code> function provided by Django:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk9">From</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">login</span></span><br><span><span> </span></span><br><span><span class="mtk12">def login_view</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk16"># ... Other code</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">login</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk9">user</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">In order to make use of <code class="code__2rdF32qjRVp7mMVBHuPwDS">login()</code>, we must first import it from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.contrib.auth</code>. The function takes in a <code class="code__2rdF32qjRVp7mMVBHuPwDS">request</code> object followed by a <code class="code__2rdF32qjRVp7mMVBHuPwDS">user</code> object. If a user is successfully logged in, a <em>session</em> will be created. But what exactly is a session?</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In Django, once the user has been logged in to their account, and until they log out on that device, they are having a session. With Django’s session framework, sessions are used to abstract the receiving and sending of <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://en.wikipedia.org/wiki/HTTP_cookie">cookies</a>. While data is saved on the server-side, the session created uses a cookie containing a special <em>session id</em> to identify each browser and its associated session with the site. This allows us to keep track of the user as they navigate around the site without constantly needing them to log in. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Using our example from the previous lesson, we can see what the proper flow is of logging in a user:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">authenticate</span><span class="mtk1">, </span><span class="mtk9">login</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">shortcuts</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">redirect</span></span><br><span><span> </span></span><br><span><span class="mtk12">def login_view</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">username</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">request</span><span class="mtk1">.</span><span class="mtk10">POST</span><span class="mtk1">[</span><span class="mtk8">"username"</span><span class="mtk1">]</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">password</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">request</span><span class="mtk1">.</span><span class="mtk10">POST</span><span class="mtk1">[</span><span class="mtk8">"password"</span><span class="mtk1">]</span></span><br><span><span> </span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">user</span><span class="mtk1"> =&nbsp;&nbsp;</span><span class="mtk9">authenticate</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk9">username</span><span class="mtk1">=</span><span class="mtk9">username</span><span class="mtk1">, </span><span class="mtk9">password</span><span class="mtk1">=</span><span class="mtk9">password</span><span class="mtk1">)</span></span><br><span><span> </span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk16"># Check if a&nbsp;user is verified and authenticated</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">if</span><span class="mtk1"> </span><span class="mtk9">user</span><span class="mtk1"> </span><span class="mtk12">is</span><span class="mtk1"> </span><span class="mtk12">not</span><span class="mtk1"> </span><span class="mtk12">None</span><span class="mtk1">:</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk16"># Use the returned user object in login()</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk9">login</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk9">user</span><span class="mtk1">)</span></span><br><span><span> </span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk16"># Redirect to home page after logging in</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk12">return</span><span class="mtk1"> </span><span class="mtk9">redirect</span><span class="mtk1">(</span><span class="mtk8">"home.html"</span><span class="mtk1">)</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">else</span><span class="mtk1">:</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk9">render</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk8">"registration/login.html"</span><span class="mtk1">, </span><span class="mtk9">context</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">The main difference is that in our <code class="code__2rdF32qjRVp7mMVBHuPwDS">if</code> statement, we’re now able to create a session by calling <code class="code__2rdF32qjRVp7mMVBHuPwDS">login()</code> using <code class="code__2rdF32qjRVp7mMVBHuPwDS">request</code> and our created <code class="code__2rdF32qjRVp7mMVBHuPwDS">user</code> object.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Our code block to sign in users is currently incomplete, add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login()</code>  function in order to log in a user after they’re authenticated. </p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In the mini-browser, navigate to <code class="code__2rdF32qjRVp7mMVBHuPwDS">account/login</code> and attempt to log in with valid credentials:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Username: <code class="code__2rdF32qjRVp7mMVBHuPwDS">tom100</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Password: <code class="code__2rdF32qjRVp7mMVBHuPwDS">codec@demy123</code></li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">Notice that <code class="code__2rdF32qjRVp7mMVBHuPwDS">tom100</code> is displayed in the browser! Look over the <code class="code__2rdF32qjRVp7mMVBHuPwDS">home()</code> view function to see what change was needed to make this display happen.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Login Mixin and Decorator</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">We have looked at how to implement the logic to authorize and log in users to give them access to our site. But, the truth is Django actually handles a lot of this logic for us! That’s right, we took the hard route implementing that logic ourselves. Now, let’s take the easy route by getting acquainted with Django’s “batteries included” means of authenticating and <em>authorizing</em> users to access specific pages. Introducing <em>mixins</em>, a type of class that is used to “mix in” extra properties and methods into another class.  One mixin that Django provides is the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In order to use the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code> we need to import it from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.contrib.auth.mixins</code>:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk9">.</span><span class="mtk10">mixins</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">LoginRequiredMixin</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">When using class-based views, we can pass a mixin as an argument. It’s important to note that mixins are called in order from left to right so we’ll want to add the login mixin before the view:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk12">class SomeView</span><span class="mtk1">(</span><span class="mtk9">LoginRequiredMixin</span><span class="mtk1">, </span><span class="mtk9">ListView</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">model</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">ModelExample</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">By implementing the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>, Django takes care of the whole process of authenticating users and making sure they’re verified before rendering a specific page. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Aside from the mixin, Django also provides us with <em>decorators</em>. A decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it. In order to use it, we must first import it into our file and add the line <code class="code__2rdF32qjRVp7mMVBHuPwDS">@login_required</code> on top of the function we want to extend:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk9">.</span><span class="mtk10">decorators</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">login_required</span></span><br><span><span> </span></span><br><span><span class="mtk4">@login_required</span></span><br><span><span class="mtk12">def profile</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">return</span><span class="mtk1"> </span><span class="mtk9">render</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk8">"app/profile.html"</span><span class="mtk1">, </span><span class="mtk9">name</span><span class="mtk1">=</span><span class="mtk8">"profile"</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Using the decorator, we’re able to deny access to a view if the user is not logged in. With just one line, Django is able to take care of all the logic required to deny/allow access to specific pages!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Both the login mixin and decorator do roughly the same thing. The main difference lies in the syntax and implementation — mixins are used for classes, while decorators are used for functions.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In its current state, any user can navigate through the site without logging in.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s change that by first importing the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login_required</code> decorator at the top of <strong>views.py</strong></p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login_required</code> decorator to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">home()</code> view function.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once implemented, attempt to navigate through the home page, you should now be required to log in to access it.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s add a little more security and make use of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>. Start by importing the mixin at the top of your <strong>views.py</strong> file.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">4.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now we can make use of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In each of your class-based views, add the mixin as the first argument.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 5 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">5.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now when you try to view any of the pages, you’ll need to log in. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Log in with the credentials to view the pages again:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Username: <code class="code__2rdF32qjRVp7mMVBHuPwDS">tom100</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Password: <code class="code__2rdF32qjRVp7mMVBHuPwDS">codec@demy123</code></li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 6 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Login Mixin and Decorator</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">We have looked at how to implement the logic to authorize and log in users to give them access to our site. But, the truth is Django actually handles a lot of this logic for us! That’s right, we took the hard route implementing that logic ourselves. Now, let’s take the easy route by getting acquainted with Django’s “batteries included” means of authenticating and <em>authorizing</em> users to access specific pages. Introducing <em>mixins</em>, a type of class that is used to “mix in” extra properties and methods into another class.  One mixin that Django provides is the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In order to use the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code> we need to import it from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.contrib.auth.mixins</code>:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk9">.</span><span class="mtk10">mixins</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">LoginRequiredMixin</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">When using class-based views, we can pass a mixin as an argument. It’s important to note that mixins are called in order from left to right so we’ll want to add the login mixin before the view:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk12">class SomeView</span><span class="mtk1">(</span><span class="mtk9">LoginRequiredMixin</span><span class="mtk1">, </span><span class="mtk9">ListView</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">model</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">ModelExample</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">By implementing the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>, Django takes care of the whole process of authenticating users and making sure they’re verified before rendering a specific page. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Aside from the mixin, Django also provides us with <em>decorators</em>. A decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it. In order to use it, we must first import it into our file and add the line <code class="code__2rdF32qjRVp7mMVBHuPwDS">@login_required</code> on top of the function we want to extend:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk9">.</span><span class="mtk10">decorators</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">login_required</span></span><br><span><span> </span></span><br><span><span class="mtk4">@login_required</span></span><br><span><span class="mtk12">def profile</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">return</span><span class="mtk1"> </span><span class="mtk9">render</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk8">"app/profile.html"</span><span class="mtk1">, </span><span class="mtk9">name</span><span class="mtk1">=</span><span class="mtk8">"profile"</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Using the decorator, we’re able to deny access to a view if the user is not logged in. With just one line, Django is able to take care of all the logic required to deny/allow access to specific pages!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Both the login mixin and decorator do roughly the same thing. The main difference lies in the syntax and implementation — mixins are used for classes, while decorators are used for functions.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In its current state, any user can navigate through the site without logging in.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s change that by first importing the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login_required</code> decorator at the top of <strong>views.py</strong></p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login_required</code> decorator to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">home()</code> view function.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once implemented, attempt to navigate through the home page, you should now be required to log in to access it.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s add a little more security and make use of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>. Start by importing the mixin at the top of your <strong>views.py</strong> file.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">4.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now we can make use of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In each of your class-based views, add the mixin as the first argument.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 5 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">5.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now when you try to view any of the pages, you’ll need to log in. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Log in with the credentials to view the pages again:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Username: <code class="code__2rdF32qjRVp7mMVBHuPwDS">tom100</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Password: <code class="code__2rdF32qjRVp7mMVBHuPwDS">codec@demy123</code></li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 6 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Login Template</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">We’ve made great progress writing functions to log users in and out of our site, let’s now explore how to make use of these functions in our view pages. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">By default, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login()</code> view function provided by Django will try to render the <strong>registration/login.html</strong> template. So the basic configuration would be creating a folder named <strong>registration/</strong> and placing a <strong>login.html</strong> template inside:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-html" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16">&lt;!-- registration/login.html --&gt;</span></span><br><span><span> </span></span><br><span><span class="mtk1">{% block title %}Login{% endblock %}</span></span><br><span><span> </span></span><br><span><span class="mtk1">{% block content %}</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk4">&lt;h2&gt;</span><span class="mtk1">Login</span><span class="mtk4">&lt;/h2&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;form</span><span class="mtk1"> </span><span class="mtk7">method</span><span class="mtk1">=</span><span class="mtk8">"post"</span><span class="mtk4">&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% csrf_token %}</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;table&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ form.as_p }}</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;tr&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;td&gt;</span><span class="mtk1">&amp;nbsp;</span><span class="mtk4">&lt;/td&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;td&gt;&lt;input</span><span class="mtk1"> </span><span class="mtk7">type</span><span class="mtk1">=</span><span class="mtk8">"submit"</span><span class="mtk1"> </span><span class="mtk7">value</span><span class="mtk1">=</span><span class="mtk8">"Submit"</span><span class="mtk4">&gt;&lt;/td&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;/tr&gt;</span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;/table&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk4">&lt;/form&gt;</span></span><br><span><span class="mtk1">{% endblock %}</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">In the code above, we’re making sure that our form sends a <code class="code__2rdF32qjRVp7mMVBHuPwDS">POST</code> request to the server. The value of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form</code> template variable will be provided by the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login()</code> view which allows the form’s fields and their attributes to be unpacked into HTML markup. We also use <code class="code__2rdF32qjRVp7mMVBHuPwDS">form.as_p</code> in order to wrap all the elements of our form in HTML <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;p&gt;</code> tags. By using <code class="code__2rdF32qjRVp7mMVBHuPwDS">form.as_p</code> we can avoid writing a loop in the template to explicitly add HTML to surround each title and field. Django is able to know what fields are required to create or log in a user and automatically renders these fields for us. Not only that, but we also are provided with validation errors in case a user logs in with invalid credentials!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">For more rendering options using the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form</code> template, feel free to take a look at the main <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/topics/forms/#working-with-form-templates">documentation</a>.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s see how the fields are automatically rendered for us using Django’s built-in methods.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form.as_p</code> method within <strong>registration/login.html</strong>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In the mini-browser, you’re already on the <code class="code__2rdF32qjRVp7mMVBHuPwDS">/account/login</code> page. Attempt to log in with invalid credentials to see the warnings rendered on the page.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Sign Up Template and View</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we can log users in and out, let’s see how we can register new users using a signup form. A straightforward way of creating a signup page is by using <code class="code__2rdF32qjRVp7mMVBHuPwDS">UserCreationForm</code> and the <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code> class-based view which are both provided by Django.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Here’s how a sign up class-based view could look like:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># views.py</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">contrib</span><span class="mtk9">.</span><span class="mtk10">auth</span><span class="mtk9">.</span><span class="mtk10">forms</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">UserCreationForm</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">urls</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">reverse_lazy</span></span><br><span><span> </span></span><br><span><span class="mtk12">class SignUp</span><span class="mtk1">(</span><span class="mtk9">CreateView</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">form_class</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">UserCreationForm</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">success_url</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">reverse_lazy</span><span class="mtk1">(</span><span class="mtk8">"login"</span><span class="mtk1">)</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">template_name</span><span class="mtk1"> =&nbsp;</span><span class="mtk8">"registration/signup.html"</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Our <code class="code__2rdF32qjRVp7mMVBHuPwDS">SignUp</code> class is using a <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code> class, in which we can specify what information to include. </p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">The first thing we’ll set is the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code> as a <code class="code__2rdF32qjRVp7mMVBHuPwDS">UserCreationForm</code> which will generate the necessary fields for us (username and password). <ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">UserCreationForm</code> was imported from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.contrib.auth.forms</code></li>
</ul>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Afterward, we use the <code class="code__2rdF32qjRVp7mMVBHuPwDS">success_url</code> attribute to assign a URL to redirect the signed up user<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">We use the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/urlresolvers/#reverse-lazy"><code class="code__2rdF32qjRVp7mMVBHuPwDS">reverse_lazy()</code> method</a> to generate a full URL from a name.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">We set the successful redirect to go to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"login"</code> path since we still want a user to login. </li>
</ul>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Lastly, we’ll assign <code class="code__2rdF32qjRVp7mMVBHuPwDS">"registration/signup.html"</code> to <code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code> so we can render that specific template. </li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">Having set up our view class, we need to add the view into <strong>urls.py</strong>. Remember to call <code class="code__2rdF32qjRVp7mMVBHuPwDS">.as_view()</code> whenever you work with class-based views:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># urls.py</span></span><br><span><span> </span></span><br><span><span class="mtk9">path</span><span class="mtk1">(</span><span class="mtk8">"signup/"</span><span class="mtk1">, </span><span class="mtk9">views</span><span class="mtk1">.</span><span class="mtk10">SignUp</span><span class="mtk9">.</span><span class="mtk10">as_view</span><span class="mtk1">(), </span><span class="mtk9">name</span><span class="mtk1">=</span><span class="mtk8">"signup"</span><span class="mtk1">),</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Since your signup template is making use of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form.as_p</code> function, whenever a user tries to register with invalid credentials Django is versatile enough to provide any warnings or validation errors automatically!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">We can apply similar authentication views into our login and logout process as well! For more information on these views, refer to the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/topics/auth/default/#all-authentication-views">documentation</a>.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s allow new users to register to our app!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">We’ve helped import the forms, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">reverse_lazy()</code> function, and provided you with a <code class="code__2rdF32qjRVp7mMVBHuPwDS">SignUp</code> class-based view. But it’s missing a few key pieces.</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code> attribute and assign it to <code class="code__2rdF32qjRVp7mMVBHuPwDS">UserCreationForm</code>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add a <code class="code__2rdF32qjRVp7mMVBHuPwDS">success_url</code> attribute and assign it to <code class="code__2rdF32qjRVp7mMVBHuPwDS">reverse_lazy("login")</code>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add a <code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code> attribute and assign it to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"registration/signup.html"</code>.</li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s add a new path for users to signup.</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Create a new path in <strong>urls.py</strong>, set the path name to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"signup/"</code>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add your newly created <code class="code__2rdF32qjRVp7mMVBHuPwDS">SignUp</code> class-based view as the second argument.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Assign <code class="code__2rdF32qjRVp7mMVBHuPwDS">"signup"</code> to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attribute.</li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Refresh your mini-browser and navigate to <code class="code__2rdF32qjRVp7mMVBHuPwDS">/signup</code> in order to see your new signup form. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Attempt to sign up a new user and then log in with the new credentials.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Admin and Authentication</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Review</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Great job! We’ve covered a lot throughout this lesson! So far, we’ve taken a look at a number of built-in functions that Django provides for us straight out of the box. Not only that but we saw how powerful the admin interface can be in order to manage our users and any other records stored in our database. Let’s rehash once again what we’ve learned so far:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">The admin interface is accessible through the route <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code></p>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">We need to register our models to our <strong>admin.py</strong> file to access them as admin. </p>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">We can create a new superuser in the terminal using the <code class="code__2rdF32qjRVp7mMVBHuPwDS">createsuperuser</code> command.</p>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object can be used in order to create new users programmatically through the shell. </p>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">Authenticating users can be done by passing in a <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> object into the built-in function, <code class="code__2rdF32qjRVp7mMVBHuPwDS">authenticate()</code>.</p>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">Django provides an easier and built-in way to login and authenticate users using mixins and decorators. </p>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">Logging out a user can be done by calling the <code class="code__2rdF32qjRVp7mMVBHuPwDS">logout()</code> function. This will terminate the session created when the user logged in, and successfully log them out. </p>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><p class="p__1qg33Igem5pAgn4kPMirjw">With the <code class="code__2rdF32qjRVp7mMVBHuPwDS">UserCreationForm</code> function, we can automatically create a form that takes in a <code class="code__2rdF32qjRVp7mMVBHuPwDS">username</code> and a <code class="code__2rdF32qjRVp7mMVBHuPwDS">password</code> and pass that form into a view page in order to register new users. </p>
</li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">Keep in mind that although we’ve looked into various functions and utilities that Django comes with straight out of the box, there’s still plenty of other methods to explore. If you’re curious about what other functions are available, refer to <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/">Django’s documentation</a>!</p>
</div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Build Python Web Apps with Django</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Weekly Dessert</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">It’s time to choose some delicious desserts!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">We’ve been hired by a school to work on an application for their cafeteria’s dessert options. The principal of the school wants us to build a voting app that allows students to choose their favorite dessert for the upcoming week. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">We have the skeleton of the application built but we want to add a layer of authentication so that only authenticated users can vote for dessert options, and only one admin can manage the app’s data. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">We’ll end up working with the admin interface as well as implementing the whole authentication flow and adding a security layer to our paths.</p>
</div></div><div class="group__1w9ZdszLiIgvZMQw2AiGJB"></div></div>


<h3>Instructions</h3>

<div class="tasks__3BcGeib32nqn75uFufLogL"><span class="tasksHelp__2Z3WGQQffexUMfndWHCEKo">Mark the tasks as complete by checking them off</span><h2 class="fit-full fcn-task-header">Admin Interface</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 1" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-1-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-1">1.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">So far, we have created the main skeleton of our weekly dessert application. In the code editor, we’ll find our <strong>urls.py</strong> file, along with our view functions in <strong>views.py</strong> and our login and signup templates. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Take a few minutes to explore the code provided. Take a look at the models under the <strong>models/</strong> directory to see the structure of the objects we’ll be working with. And feel free to open other files to understand how the application is built and what are some of the missing parts.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 2" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-2-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-2">2.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s provide our client with a user to create, read, update and delete data in the Django admin. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Within the Python terminal, create a <code class="code__2rdF32qjRVp7mMVBHuPwDS">superuser</code> with your own credentials. Make sure to remember these credentials since you’ll be using them in the next following steps.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><strong>NOTE</strong>: When entering the password, you might be warned that the password and username are too similar. Bypass this warning by typing <code class="code__2rdF32qjRVp7mMVBHuPwDS">y</code>.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 3" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-3-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-3">3.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have a superuser created, let’s navigate into the admin interface and log in. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In the mini-browser, go to <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code> and type in the admin credentials. </p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 4" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-4-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-4">4.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Through the admin interface, we’re able to see our authentication and authorization table. But we’re missing our other table holding our two other models. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s start by importing the models <code class="code__2rdF32qjRVp7mMVBHuPwDS">Week</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Choice</code> in <strong>admin.py</strong>.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 5" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-5-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-5">5.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">For the models to appear on the <code class="code__2rdF32qjRVp7mMVBHuPwDS">/admin</code> page, we still need to register them.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Using the <code class="code__2rdF32qjRVp7mMVBHuPwDS">register()</code> function, register both the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Week</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Choice</code> models in our <strong>admin.py</strong> file.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 6" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-6-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-6">6.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s test that the models are registered. In the admin interface, create a new dessert from the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Choice</code> model.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Login and Registration</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 7" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-7-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-7">7.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">We’re able to use the admin interface to handle our data and users, but let’s practice creating users from the Python shell. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Start by opening the Python shell and importing the <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> model.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 8" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-8-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-8">8.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Create a new user object with your credentials (username, email, and password), and store it in a variable called <code class="code__2rdF32qjRVp7mMVBHuPwDS">user</code>. Make sure to save <code class="code__2rdF32qjRVp7mMVBHuPwDS">user</code>.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 9" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-9-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-9">9.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">We’ve learned what happens behind the scenes when a user logs in and how to authenticate existing users. Instead of writing all the logic for this, let’s take advantage of Django’s built-in authentication views.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In <strong>urls.py</strong> add the path <code class="code__2rdF32qjRVp7mMVBHuPwDS">"account/"</code> followed by <code class="code__2rdF32qjRVp7mMVBHuPwDS">include("django.contrib.auth.urls")</code> as the second argument. Remember to add a <code class="code__2rdF32qjRVp7mMVBHuPwDS">,</code> after the <code class="code__2rdF32qjRVp7mMVBHuPwDS">path()</code>!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Note that we don’t need to add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attribute since Django’s built-in auth views will provide the <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attribute for us.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 10" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-10-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-10">10.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">If we navigate to <code class="code__2rdF32qjRVp7mMVBHuPwDS">account/login</code> our login form will be missing! This is because our form fields are not being rendered in our login template.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In <strong>templates/registration/login.html</strong>. Let’s add some form rendering tags to display a <code class="code__2rdF32qjRVp7mMVBHuPwDS">username</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">password</code> field. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once rendered, attempt to log in!</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 11" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-11-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-11">11.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now let’s allow other users to sign up. In <strong>views.py</strong>, create a new class-based view called <code class="code__2rdF32qjRVp7mMVBHuPwDS">SignUp</code>. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Add the generic <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code> as the argument and give it the following properties:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Assign the <code class="code__2rdF32qjRVp7mMVBHuPwDS">UserCreationForm</code> to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code> property</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add the right property to redirect users to <code class="code__2rdF32qjRVp7mMVBHuPwDS">reverse_lazy("login")</code> upon a successful registration.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Set the template to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"registration/signup.html"</code>.</li>
</ul>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 12" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-12-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-12">12.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">We need a path for users to access the sign up page.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In <strong>urls.py</strong> add the path, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"signup/"</code>, using our class-based view as the second argument. Let’s also assign <code class="code__2rdF32qjRVp7mMVBHuPwDS">"signup"</code> to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attribute. Remember to add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">,</code> after the <code class="code__2rdF32qjRVp7mMVBHuPwDS">path()</code> element! </p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 13" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-13-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-13">13.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s attempt to sign up a new user. Navigate to <code class="code__2rdF32qjRVp7mMVBHuPwDS">/signup</code> to make sure our form is being rendered. Try out the form by signing up a new user. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once redirected to the login page, log in with the newly created user. </p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Logging Out</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 14" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-14-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-14">14.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">We can now register new users, and log them in. However, we need the ability to log out as well. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In <strong>views.py</strong>, import the function <code class="code__2rdF32qjRVp7mMVBHuPwDS">logout</code> function.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 15" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-15-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-15">15.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">In <code class="code__2rdF32qjRVp7mMVBHuPwDS">views.py</code>, create a logout view function called <code class="code__2rdF32qjRVp7mMVBHuPwDS">logout_request</code> and make use of Django’s built-in function <code class="code__2rdF32qjRVp7mMVBHuPwDS">logout</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once a user logs out, redirect them to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">"index"</code> page.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 16" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-16-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-16">16.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">logout</code> path. In <strong>urls.py</strong>, create a new path, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"logout/"</code>, and use our newly created view for the second argument. Let’s also assign <code class="code__2rdF32qjRVp7mMVBHuPwDS">"logout"</code> to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attribute. Remember to add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">,</code> after the <code class="code__2rdF32qjRVp7mMVBHuPwDS">path()</code> element.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 17" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-17-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-17">17.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s add a logout button in our header for users to log out.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In <strong>header.html</strong> create an anchor tag with the class name <code class="code__2rdF32qjRVp7mMVBHuPwDS">"logout-button"</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Using Django’s templating language, add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">href</code> attribute and direct the user to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">logout</code> view. Add text that also says <code class="code__2rdF32qjRVp7mMVBHuPwDS">Log Out</code>. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Save the page and in the app, vote for a new dessert. After landing on the results page, click on the “Log Out” link to make sure logging out can happen successfully.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Securing Your Paths</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 18" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-18-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-18">18.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">We have successfully added authentication to our app! However, our paths are not entirely secure.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Currently, anyone can navigate to our app and vote for desserts. But we only want to allow authenticated users to do so. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s secure our home page and voting page with the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login_required</code> decorator. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Start by importing the <code class="code__2rdF32qjRVp7mMVBHuPwDS">login_required</code> decorator in <strong>views.py</strong> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.contrib.auth.decorators</code>. </p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 19" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-19-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-19">19.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Remember decorators are used for view functions. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Add your decorator to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">index</code> and the <code class="code__2rdF32qjRVp7mMVBHuPwDS">vote</code> views.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 20" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-20-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-20">20.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">The home page and voting page are now secured, let’s secure our other paths using a mixin.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Still in <strong>views.py</strong>, import the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code>.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 21" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-21-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-21">21.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Mixins are used for class-based views. Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">LoginRequiredMixin</code> to your <code class="code__2rdF32qjRVp7mMVBHuPwDS">DetailsView</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">ResultsView</code> to ensure a user is logged in in order to access those pages.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once implemented our app should be secured and only authenticated and logged in users will be allowed to use it!</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Review</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 22" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-22-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-22">22.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Great job! Now the student will be able to sign up and vote for their favorite dessert!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Optionally, you can continue to play around with the code and challenge yourself. </p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Try experimenting with the rendered <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/topics/forms/"><code class="code__2rdF32qjRVp7mMVBHuPwDS">forms</code></a> and rendering the user fields with different tags. </li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Use the admin interface to add another option on top of a dessert, perhaps a Friday snack?</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add a few more fields, such as <code class="code__2rdF32qjRVp7mMVBHuPwDS">age</code> or <code class="code__2rdF32qjRVp7mMVBHuPwDS">year</code>, within your <code class="code__2rdF32qjRVp7mMVBHuPwDS">SignUp</code> view in order for a new user to sign up. </li>
</ul>
</div></div></div></article></div></div>


<h3>Solution</h3>




