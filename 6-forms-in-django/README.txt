<h1 class="gamut-1ewwict-Text e8i0p5k0">Why are Forms Useful?</h1><p class="gamut-1xdcsrc-Text e8i0p5k0"><span data-testid="markdown" class="markdown__32VfO5X72_8Hgq-lL1FiEX">Django also makes form creation and handling form information a breeze.</span></p><div class="gamut-unqu21-Box-ArticleContentContainer e1xfx7rd1"><div data-testid="markdown" class="spacing-loose__3_R8mSIQ2cspwhDGkCOXTu markdown__32VfO5X72_8Hgq-lL1FiEX darkTheme__1DQKVxwlUlCBpualn71c3Z gamut-gk1onf-ArticleMarkdown e1xfx7rd0"><p class="p__1qg33Igem5pAgn4kPMirjw">When surfing the internet, you’re constantly interacting with forms and you might not even realize it! </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Looking something up on a search engine? Signing up for a new account? Logging in? Ordering from your favorite restaurant? These applications all use forms one way or another. Typically these forms are all written in HTML, but with Django and <em>DTL</em> you can create forms even quicker and suited for your needs.</p>
</div></div>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">What are Forms?</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">When working in most application, user information is gathered using <em>forms</em>. Forms are mostly different input fields asking unique questions. Data gathered from forms is usually used later in the backend of the application.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">In Django, these forms look and act generally the same as normal HTML forms. The largest difference between Django forms and HTML forms is that Django uses a model based system to handle the data. More information can be found in <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form">MDN’s HTML forms documentation</a>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">When creating forms in Django, we have a number of different options available in regards to building the form. In this lesson, we’ll go over some of these methods. Including one that allows Django to build the form for us, reducing the amount of HTML we have to write ourselves.</p>
</div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">An Overview of HTML Forms</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">When a form is created in any HTML document, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> element is used to tell the application where the user input will come from. This <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"><code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> element</a> has two main attributes, <code class="code__2rdF32qjRVp7mMVBHuPwDS">action</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">method</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><code class="code__2rdF32qjRVp7mMVBHuPwDS">action</code> is used to tell the application what script to run when the form is submitted. Most forms need an <code class="code__2rdF32qjRVp7mMVBHuPwDS">action</code> attribute, but we don’t need it since Django handles the form submission for us.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><code class="code__2rdF32qjRVp7mMVBHuPwDS">method</code> is used to tell the application where to submit the form data. For Django, this attribute is optional and has two possible values, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">"GET"</code>. <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code> requests will send information to the server, while <code class="code__2rdF32qjRVp7mMVBHuPwDS">"GET"</code> requests will retrieve information. We’ll be using <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code> for form submission.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Inside of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> can be a number of different elements. The two we’ll go over right now are the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;label&gt;</code> elements. The <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label"><code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;label&gt;</code> element</a> is used to add a label to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> element. And the <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"><code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> element</a> is where the user will input data for the form.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> element has a number of optional attributes. Some of those being the <code class="code__2rdF32qjRVp7mMVBHuPwDS">id</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attributes. The <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attribute is used to help us grab the data from the form in our Django application. The <code class="code__2rdF32qjRVp7mMVBHuPwDS">id</code> attribute is used for identifying and referencing specific HTML elements. This is usually used later for the <code class="code__2rdF32qjRVp7mMVBHuPwDS">for</code> attribute value in a <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;label&gt;</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">An important attribute that is used with the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> element is the <code class="code__2rdF32qjRVp7mMVBHuPwDS">type</code> attribute. This is used to tell the HTML document what data types to accept for input. For instance, if we use the type <code class="code__2rdF32qjRVp7mMVBHuPwDS">"email"</code>, the form will not submit unless an email is typed into the input field.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once all the necessary input elements are added to the form, one more <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> element is needed that is of type <code class="code__2rdF32qjRVp7mMVBHuPwDS">"submit"</code>. This will create a button that lets the user send their data to the application once all of the fields are filled out.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">There’s a lot more that we can explore for HTML forms, but we’ll see later on how Django takes care of some of this work for us.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Create a <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> element to the HTML document currently open (<strong>owner_create_form.html</strong>). Set the <code class="code__2rdF32qjRVp7mMVBHuPwDS">action</code> to <code class="code__2rdF32qjRVp7mMVBHuPwDS">""</code> and the <code class="code__2rdF32qjRVp7mMVBHuPwDS">method</code> to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Inside of <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code>, create a <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;label&gt;</code> element with:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">a <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> attribute set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">"LabelField"</code>, </li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">a <code class="code__2rdF32qjRVp7mMVBHuPwDS">for</code> attribute set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">"InputField"</code>. </li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">the text of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;label&gt;</code> to <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner name:</code>.</li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> element after the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;label&gt;</code> element. Set both <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">id</code> as <code class="code__2rdF32qjRVp7mMVBHuPwDS">"InputField"</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">4.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">At the bottom of the form, add an <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> with <code class="code__2rdF32qjRVp7mMVBHuPwDS">type</code> as <code class="code__2rdF32qjRVp7mMVBHuPwDS">"submit"</code> that also has a <code class="code__2rdF32qjRVp7mMVBHuPwDS">value</code> of <code class="code__2rdF32qjRVp7mMVBHuPwDS">"Submit"</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 5 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Form Security</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">When building any online form, proper defenses need to be made to protect the application from any malicious users. This is because any form is susceptible to attacks including <em>Cross Site Request Forgery</em> attacks, or <em>CSRF</em> attacks. These attacks happen when a user uses another user’s credentials without their knowledge and executes malicious actions.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Django has a built in method for defending against CSRF attacks by including a <em><a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/csrf/">CSRF token</a></em>. The CSRF token protects the application and the user by adding a secret token inside of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code> methods in the forms each time the form is rendered. The CSRF token ensures that only the proper user is using the proper credentials.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">The best way to add this token is to add a tag to the template inside of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> element:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-html" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk4">&lt;form&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;{% csrf_token %}</span></span><br><span><span class="mtk1">&nbsp;&nbsp;...</span></span><br><span><span class="mtk4">&lt;/form&gt;</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">This token adds all the necessary security to help defend from possible CSRF attacks and is conventionally placed at the beginning of the form.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Form validation is also necessary to help defend out applications from possible attacks that use incorrect data types to cause problems, e.g. <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://www.w3schools.com/sql/sql_injection.asp">SQL attacks</a>. This validation can include ensuring only specific data types are being submitted to protect our database.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Form validation is usually done in <strong>views.py</strong> in Django, and consists of an <code class="code__2rdF32qjRVp7mMVBHuPwDS">if</code> statement before assigning data from the form to the database:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">if</span><span class="mtk1"> </span><span class="mtk9">form</span><span class="mtk1">.</span><span class="mtk10">is_valid</span><span class="mtk1">():</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">form</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">form</span><span class="mtk1">.</span><span class="mtk10">save</span><span class="mtk1">()</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Notice how Django makes it easy to secure our application!</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Add a CSRF token to the under the opening <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> declaration like in the example given above.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In <strong>views.py</strong> there is a method called <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreate(request)</code>. Inside of that method, locate the line <code class="code__2rdF32qjRVp7mMVBHuPwDS">form = OwnerCreateForm(request.POST)</code> and add your validation below it and save the form if the form is valid.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw"><strong>Note</strong>: There is some extra code within this method that you may not recognize, but don’t worry, we’ll be covering this code later!</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Submitting a Form</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In Django, we’ll be using the <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code> method when the form is submitted, which means all of the data from the forms will be sent to the POST method in <strong>views.py</strong>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Before we go into accessing the POST data, we need to understand that the logic is stored in the same function in <strong>views.py</strong> that renders the template. Therefore, to differentiate how the view function should treat a POST request vs rendering the usual form, we use an <code class="code__2rdF32qjRVp7mMVBHuPwDS">if</code> statement. This <code class="code__2rdF32qjRVp7mMVBHuPwDS">if</code> statement checks that the request method is <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>. Here’s an example for how to structure our view function that handles the rendering logic:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">from</span><span class="mtk1"> .</span><span class="mtk10">models</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">Model_Name</span></span><br><span><span> </span></span><br><span><span class="mtk12">def renderTemplate</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">if</span><span class="mtk1"> </span><span class="mtk9">request</span><span class="mtk1">.</span><span class="mtk10">method</span><span class="mtk1"> == </span><span class="mtk8">"POST"</span><span class="mtk1">:</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk9">test_model</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">Model_Name</span><span class="mtk1">()</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk9">test_model</span><span class="mtk1">.</span><span class="mtk10">field</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">request</span><span class="mtk1">.</span><span class="mtk10">POST</span><span class="mtk1">[</span><span class="mtk8">"field_name"</span><span class="mtk1">]</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk9">test_model</span><span class="mtk1">.</span><span class="mtk10">save</span><span class="mtk1">()</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">return</span><span class="mtk1"> </span><span class="mtk9">render</span><span class="mtk1">(</span><span class="mtk9">request</span><span class="mtk1">, </span><span class="mtk8">"template_with_form.html"</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">The first thing that needs to be done is to check if the <code class="code__2rdF32qjRVp7mMVBHuPwDS">request.method</code> is equal to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>. When the method is <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>, it means that the form was submitted which means that we can grab all the data and use it to create a new model instance. Notice our <code class="code__2rdF32qjRVp7mMVBHuPwDS">test_model</code> is a <code class="code__2rdF32qjRVp7mMVBHuPwDS">new Model_Name()</code>. We then assign the <code class="code__2rdF32qjRVp7mMVBHuPwDS">test_model.field</code> a value of <code class="code__2rdF32qjRVp7mMVBHuPwDS">request.POST["field_name"]</code>. This is because in our form, we had an input field with a <code class="code__2rdF32qjRVp7mMVBHuPwDS">name</code> set to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"field_name"</code>. The <code class="code__2rdF32qjRVp7mMVBHuPwDS">request.POST["field_name"]</code> syntax shows that <code class="code__2rdF32qjRVp7mMVBHuPwDS">request</code> is treated like a dictionary with a <code class="code__2rdF32qjRVp7mMVBHuPwDS">"field_name"</code> property. Once all of the data from <code class="code__2rdF32qjRVp7mMVBHuPwDS">request.POST</code> is added to the model, we can save the model and render the form again.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">If our conditional isn’t met, it usually means that the form is being rendered for the first time, so we can skip the instance creation and just render the form as normal.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Aside from re-rendering the template, we could also redirect to a new template! We’ll discuss redirecting in more detail later.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In <strong>views.py</strong>, locate the method <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreate()</code> and add an <code class="code__2rdF32qjRVp7mMVBHuPwDS">if</code> statement to check if the request method is <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">If the method is <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>, create a new instance called <code class="code__2rdF32qjRVp7mMVBHuPwDS">newOwner</code> using the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code> model.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Access <code class="code__2rdF32qjRVp7mMVBHuPwDS">"first_name"</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">POST</code> and assign it to <code class="code__2rdF32qjRVp7mMVBHuPwDS">newOwner.first_name</code>. Do the same thing for <code class="code__2rdF32qjRVp7mMVBHuPwDS">last_name</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">phone_number</code>. Once that’s done, save the model.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Generics in Django: forms.py</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Django can also help streamline the form creation process for us! We first need to create a file called <strong>forms.py</strong> which houses the general structure for any form we want in the application. <strong>forms.py</strong> should be created in the base directory of the application. So for our program, the path should look: <strong>vetoffice/forms.py</strong>. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Django forms are used with built-in <em><a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/class-based-views/generic-display/">generic classes</a></em> to help build the forms in the template. The code below will show a basic <strong>forms.py</strong> setup:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">forms</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> .</span><span class="mtk10">models</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">User</span></span><br><span><span> </span></span><br><span><span class="mtk12">class TestForm</span><span class="mtk1">(</span><span class="mtk9">forms</span><span class="mtk1">.</span><span class="mtk10">ModelForm</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">class Meta</span><span class="mtk1">:</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk9">model</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">User</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk9">fields</span><span class="mtk1"> =&nbsp;(</span><span class="mtk8">"username"</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">The first thing that needs to be done in <strong>forms.py</strong> is that we need to import <code class="code__2rdF32qjRVp7mMVBHuPwDS">forms</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django</code> and import any model we’ll be using from <code class="code__2rdF32qjRVp7mMVBHuPwDS">.models</code>. Then we can start constructing separate classes for each form we want to build. In this example, we created a new class called <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestForm</code>. <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestForm</code> takes in one parameter called <code class="code__2rdF32qjRVp7mMVBHuPwDS">forms.ModelForm</code> which is used to help build these forms in the template.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Inside of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestForm</code> class is <code class="code__2rdF32qjRVp7mMVBHuPwDS">class Meta</code>. This inner <code class="code__2rdF32qjRVp7mMVBHuPwDS">Meta</code> class is used to let the application know what is inside of the parent class. Notice that we have two properties in the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Meta</code> class:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><code class="code__2rdF32qjRVp7mMVBHuPwDS">model</code> which tells the app what model we’ll be using <ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">In the example, we’re using the <code class="code__2rdF32qjRVp7mMVBHuPwDS">User</code> model</li>
</ul>
</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><code class="code__2rdF32qjRVp7mMVBHuPwDS">fields</code> which can be a tuple or list that informs the app what fields to use<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">In the example, we’re using one field, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"username"</code> </li>
</ul>
</li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">If we wanted to include every field of a model, instead of writing it all out inside of the <code class="code__2rdF32qjRVp7mMVBHuPwDS">fields</code> list, we could include one string that says <code class="code__2rdF32qjRVp7mMVBHuPwDS">'__all__'</code> to indicate that we want every field to be used.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">In the previous exercises, we wrote in all the HTML for our forms. But with generics, we don’t need to do that anymore. We’ve removed the code from <strong>owner_create_form.html</strong> (that’s why the <code class="code__2rdF32qjRVp7mMVBHuPwDS">owner/create</code> page is empty) and we’ll start the process of using form generics. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Create <strong>forms.py</strong> inside of <strong>vetoffice/</strong>. Inside of <strong>forms.py</strong>, import <code class="code__2rdF32qjRVp7mMVBHuPwDS">forms</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">.models</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Create a class called <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreateForm</code> that takes <code class="code__2rdF32qjRVp7mMVBHuPwDS">forms.ModelForm</code> as a parameter.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">class Meta</code> to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreateForm</code> class.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">4.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Inside of <code class="code__2rdF32qjRVp7mMVBHuPwDS">Meta</code>, make sure the model is set to <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code> and the accepts the following fields: <code class="code__2rdF32qjRVp7mMVBHuPwDS">"first_name"</code>, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"last_name"</code>, and <code class="code__2rdF32qjRVp7mMVBHuPwDS">"phone"</code>. In a few more exercises we’ll be able to view this form.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 5 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Generics in Django: views.py</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have the form made in <strong>forms.py</strong>, we can wire up our <strong>views.py</strong> classes to render our templates. Remember we’ll need to import both our form and our <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/class-based-views/generic-editing/">generic views</a>:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">from</span><span class="mtk1"> .</span><span class="mtk10">forms</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">TestForm</span></span><br><span><span class="mtk12">from</span><span class="mtk1"> </span><span class="mtk9">django</span><span class="mtk1">.</span><span class="mtk10">views</span><span class="mtk9">.</span><span class="mtk10">generic</span><span class="mtk9">.</span><span class="mtk10">edit</span><span class="mtk1"> </span><span class="mtk12">import</span><span class="mtk1"> </span><span class="mtk9">CreateView</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Recall that we had to create a class for <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestForm</code> in <strong>views.py</strong>. This class is usually named after the form, followed by the type of view being created. For instance, with our <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestForm</code>, we would make a new class that’s called <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestFormCreate</code> that takes in <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code>. A sample of this class is below.</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">class TestFormCreate</span><span class="mtk1">(</span><span class="mtk9">CreateView</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">model</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">TestModel</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">template_name</span><span class="mtk1"> =&nbsp;</span><span class="mtk8">"appName/form_template.html"</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">form_class</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">TestForm</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">This class has three properties as seen above, those being the <code class="code__2rdF32qjRVp7mMVBHuPwDS">model</code>, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code>, and the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code>. The <code class="code__2rdF32qjRVp7mMVBHuPwDS">model</code> is assigned the model we want to use. The <code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code> is the template file that we want the form to be used in. And the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code> is going to be the class that we created in <strong>forms.py</strong>. The <code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code> will also tell Django to use this form within the template when building the form for us.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Remember that we need to tell <strong>views.py</strong> what we are going to be using, which means that we need to add imports for:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">the generic view, <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django.views.generic.edit</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">the form that we just made: <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreateForm</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">.forms</code></li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Create the <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreate</code> class.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have a place to put our creation form, let’s add everything we need to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreate</code> class by:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Having the <code class="code__2rdF32qjRVp7mMVBHuPwDS">model</code> set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Having the <code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code> set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">"vetoffice/owner_create_form.html"</code>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Having the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code> set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreateForm</code>.</li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw"><strong>Note</strong>: the <code class="code__2rdF32qjRVp7mMVBHuPwDS">owner/create</code> page is still blank, but we’re really close to rendering the form! </p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Generics in Django: Paths &amp; Templates</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Once the class is created in <strong>views.py</strong>, a path needs to be added to <strong>urls.py</strong> so that the template can be rendered. The following <code class="code__2rdF32qjRVp7mMVBHuPwDS">path()</code> syntax should look familiar:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk9">path</span><span class="mtk1">(</span><span class="mtk8">"path/name"</span><span class="mtk1">, </span><span class="mtk9">views</span><span class="mtk1">.</span><span class="mtk10">TestFormCreate</span><span class="mtk9">.</span><span class="mtk10">as_view</span><span class="mtk1">(), </span><span class="mtk9">name</span><span class="mtk1">=</span><span class="mtk8">"testformcreate"</span><span class="mtk1">),</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">Now we can actually create the template that will house the form. This template will just be a normal template and will be stored with all the other templates. The file path should look like this:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="plaintext" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk1">appname/</span></span><br><span><span class="mtk1">├─ manage.py</span></span><br><span><span class="mtk1">└─ mysite/</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;└─ templates</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└─ mysite/</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└─ form_template.html</span></span><br></div></code></pre></pre><p class="p__1qg33Igem5pAgn4kPMirjw">This template will be treated as a normal template, meaning that it will usually extend from <strong>base.html</strong> and include blocks. Inside of the content blocks will be the following code.</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-html" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk1">{% extends "appname/base.html" %}</span></span><br><span><span> </span></span><br><span><span class="mtk1">{% block content %}</span></span><br><span><span class="mtk4">&lt;form</span><span class="mtk1"> </span><span class="mtk7">method</span><span class="mtk1">=</span><span class="mtk8">"POST"</span><span class="mtk4">&gt;</span></span><br><span><span class="mtk1">&nbsp;&nbsp;{% csrf_token %}</span></span><br><span><span class="mtk1">&nbsp;&nbsp;{{ form.as_p }}</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk4">&lt;input</span><span class="mtk1"> </span><span class="mtk7">type</span><span class="mtk1">=</span><span class="mtk8">"submit"</span><span class="mtk1"> </span><span class="mtk7">value</span><span class="mtk1">=</span><span class="mtk8">"Submit"</span><span class="mtk4">/&gt;</span></span><br><span><span class="mtk4">&lt;/form&gt;</span></span><br><span><span class="mtk1">{% endblock %}</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">This code looks very similar to a normal HTML form, including the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form</code> element with the <code class="code__2rdF32qjRVp7mMVBHuPwDS">method</code> being <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>, a <code class="code__2rdF32qjRVp7mMVBHuPwDS">csrf_token</code>, and an <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> element of type <code class="code__2rdF32qjRVp7mMVBHuPwDS">"submit"</code>. However, the entirety of the form is inside of the variable tag, <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/forms/api/#as-p">using  <code class="code__2rdF32qjRVp7mMVBHuPwDS">form.as_p</code></a>. Conveniently, <code class="code__2rdF32qjRVp7mMVBHuPwDS">form.as_p</code> tells the DTL to render all of the fields we included as form inputs neatly inside <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;p&gt;</code> elements.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">owner/create</code> page still isn’t rendering correctly, so let’s start to change that. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Inside of <strong>urls.py</strong>, add a path to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"owner/create"</code> with the view <code class="code__2rdF32qjRVp7mMVBHuPwDS">OwnerCreate.as_view()</code>. Set the name to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"ownercreate"</code>.</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Let’s set up our template now:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Create a template in <strong>templates/vetoffice/</strong> called <strong>owner_create_form.html</strong>. </li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Inside of this template, have it extend from <strong>vetoffice/base.html</strong>. </li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add a block named <code class="code__2rdF32qjRVp7mMVBHuPwDS">content</code>. Make sure to end the block as well.</li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">3.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Inside of the content block, add the elements necessary to build the HTML form using Django, including:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">{% csrf_token %}</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;input&gt;</code> of type <code class="code__2rdF32qjRVp7mMVBHuPwDS">"submit"</code>.</li>
</ul>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 4 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">4.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Notice our form is starting to take shape, let’s add in the rest.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">We need to add <code class="code__2rdF32qjRVp7mMVBHuPwDS">{{ form.as_p }}</code> inside the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Then run your code to see the finished form rendered in the mini-browser! If you try submitting something, you’ll get an error about redirecting — we’ll fix that in the next exercise. </p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 5 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Redirecting</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">After a user submits their data, they should be redirected to another page. Otherwise, the user might resubmit data again and create duplicates. The Django convention is to create a <a target="_blank" rel="noopener" class="e14vpv2g1 gamut-xro1w8-ResetElement-Anchor-AnchorBase e1bhhzie0" href="https://docs.djangoproject.com/en/3.1/ref/models/instances/#get-absolute-url"><code class="code__2rdF32qjRVp7mMVBHuPwDS">.get_absolute_url()</code> method</a>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">.get_absolute_url()</code> method goes inside of <strong>models.py</strong> and inside of the class of the model that the form is using. For instance, if we had used a model called <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestModel</code> in our forms, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">TestModel</code> class would look like this in <strong>models.py</strong>:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk12">class TestModel</span><span class="mtk1">(</span><span class="mtk9">models</span><span class="mtk1">.</span><span class="mtk10">Model</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">field1</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">models</span><span class="mtk1">.</span><span class="mtk10">CharField</span><span class="mtk1">()</span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk9">field2</span><span class="mtk1"> =&nbsp;</span><span class="mtk9">models</span><span class="mtk1">.</span><span class="mtk10">CharField</span><span class="mtk1">()</span></span><br><span><span> </span></span><br><span><span class="mtk1">&nbsp;&nbsp;</span><span class="mtk12">def get_absolute_url</span><span class="mtk1">(</span><span class="mtk9">self</span><span class="mtk1">):</span></span><br><span><span class="mtk1">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="mtk12">return</span><span class="mtk1"> </span><span class="mtk8">"list"</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">The method <code class="code__2rdF32qjRVp7mMVBHuPwDS">get_absolute_url()</code> has one parameter, <code class="code__2rdF32qjRVp7mMVBHuPwDS">self</code>, and the method is used to direct users to a specific path. Notice that we have the method returning a string, which is the relative path name. This string tells Django where to redirect our users to after submitting their form. In the case described above, the users will be redirected to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">"model/list"</code> path even though we’re only returning <code class="code__2rdF32qjRVp7mMVBHuPwDS">"list"</code> — that’s because Django is configured to assume we want to send users somewhere related to the model. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">By adding one method, Django lowers the chance of our users re-submitting a form, or wondering if their information got sent! </p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Inside of <strong>models.py</strong>, locate the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code> model. Then add the <code class="code__2rdF32qjRVp7mMVBHuPwDS">.get_absolute_url()</code> method and have it return <code class="code__2rdF32qjRVp7mMVBHuPwDS">"list"</code></p>
<p class="p__1qg33Igem5pAgn4kPMirjw">After you’re done, try out the form!</p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Creating Additional Forms</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">When creating more forms for the Django application, they should all be included inside of <strong>forms.py</strong>. For that reason, we need to make sure that <strong>forms.py</strong> does not become too disorganized. We recommend keeping as much relative data together and as close as possible. Try to keep the code as clean as possible when writing a new form. This can be done by keeping all information as close together as possible and commenting on the code as you write it. Also, try not to add anything that isn’t necessary.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">With the methods used in this lesson, <strong>forms.py</strong> should not become too large to handle. Even though larger application might have larger <strong>forms.py</strong> the overall length should not have an impact on application performance.</p>
</div></div></div>


<h3>Instructions</h3>

<div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">1.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">We did some setup in <strong>models.py</strong>, <strong>views.py</strong>, <strong>urls.py</strong>, and created both <strong>vetoffice/templates/patient_list.html</strong> and <strong>vetoffice/templates/patient_create_form.html</strong>. But, the <code class="code__2rdF32qjRVp7mMVBHuPwDS">patient/create</code> page doesn’t load! That’s because <strong>forms.py</strong> still needs come configuration. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Import another model called <code class="code__2rdF32qjRVp7mMVBHuPwDS">Patient</code> into <strong>forms.py</strong></p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 2 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div><div aria-hidden="false"><div class="checkpoint__4BHU1WTSxj6VwmNAYRwAn" data-testid="checkpoint-satisfied"><b class="checkpointNumber__31eTdII4vTq3Axat9vAk4l">2.</b><div class="checkpointBody__1H24X3oapbMTCVrjYQ07xN"><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Now you can add a new form called <code class="code__2rdF32qjRVp7mMVBHuPwDS">PatientCreateForm</code>. This form should use the model <code class="code__2rdF32qjRVp7mMVBHuPwDS">Patient</code> and have the fields: <code class="code__2rdF32qjRVp7mMVBHuPwDS">"pet_name"</code>, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"animal_type"</code>, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"breed"</code>, <code class="code__2rdF32qjRVp7mMVBHuPwDS">"age"</code>, and <code class="code__2rdF32qjRVp7mMVBHuPwDS">"owner"</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Click on the “Add Patient” button to see your new form! </p>
</div></div></div><div class="checkpointCheckbox__2jb1qr-RgojJrXjQnCdSZB checkboxSatisfied__3GbJB-7urIzf9cVW-5ASm6"><div class="gamut-xz9pfx-HiddenText e88fw8k0"><span aria-live="assertive">Checkpoint 3 Passed</span></div><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Forms</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Review</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">Congrats! That’s everything you need to know to build a basic form using Django! Let’s go back over some of the important points from this lesson.</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Remember that in any application, forms are necessary for gathering data from the user.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">These forms can easily be created in Django by using generics created in <strong>forms.py</strong>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Forms are susceptible to attacks from malicious users, so make sure to add security such as a <code class="code__2rdF32qjRVp7mMVBHuPwDS">{% csrf_token %}</code> and form validation.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Data from forms is submitted to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"POST"</code>, except for when using generics. When using generics, the data is submitted directly to the model and no extra work needs to be done.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><strong>forms.py</strong> can get rather large when working on some applications. While a large <strong>forms.py</strong> shouldn’t impact performance, it is important to try and keep <strong>forms.py</strong> as organized as possible.</li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">You can see how forms are really important to the overall experience of a Django app. Take this new knowledge and try applying it for your own ideas!</p>
</div></div></div>


<h3>Instructions</h3>

<div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX body__sLYJ9fiYXLTCz2YhxIaHE"><p class="p__1qg33Igem5pAgn4kPMirjw">Great job working through forms! If you want to challenge yourself further, consider:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Creating forms to update and delete <code class="code__2rdF32qjRVp7mMVBHuPwDS">Owner</code> instances</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Creating forms to update and delete <code class="code__2rdF32qjRVp7mMVBHuPwDS">Patient</code> instances </li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Link up these new forms inside their respective <code class="code__2rdF32qjRVp7mMVBHuPwDS">ListView</code>s. </li>
</ul>
</div></div></div>


<h3>Solution</h3>




<h1>Learn</h1>

<div class="gamut-1h3qpnn-Box ebnwbv90"><div aria-hidden="true" class="gamut-haybot-Text e8i0p5k0">Build Python Web Apps with Django</div><span aria-hidden="true" class="gamut-yj8jvy-Text e8i0p5k0">Tourist Attractions with Forms</span><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX"><p class="p__1qg33Igem5pAgn4kPMirjw">A local travel agency can’t keep up with all the new attractions being added all over the country! They want an easier way to add not only new attractions, but new states that they forgot to include originally. This is keeping the agency from staying up to date on what attractions are in each state and they need your help to create a solution to this!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Using the skills learned for Django on creating forms, we’ll practice:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Generic form creation</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Using forms to create instances</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Form security</li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">Let’s get started! </p>
</div></div><div class="group__1w9ZdszLiIgvZMQw2AiGJB"></div></div>


<h3>Instructions</h3>

<div class="tasks__3BcGeib32nqn75uFufLogL"><span class="tasksHelp__2Z3WGQQffexUMfndWHCEKo">Mark the tasks as complete by checking them off</span><h2 class="fit-full fcn-task-header">Working with Forms</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 1" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-1-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-1">1.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">After taking a look around we’ll see that this application looks a lot like the original application we built before. The templates are about the same and all we changed was what was inside of <strong>models.py</strong>. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Feel free to take a look at <strong>models.py</strong> and see what changes were made. You’ll notice that some fields have a <code class="code__2rdF32qjRVp7mMVBHuPwDS">verbose_name</code> argument. This just changes how the field is displayed in a generic form. Look over the new models and their fields.</p>
</div></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 2" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-2-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-2">2.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now we want to make it to where users can add the data themselves to <strong>models.py</strong>. We’ll do this using Django generics.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">To start we need to:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Create <strong>forms.py</strong></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Import <code class="code__2rdF32qjRVp7mMVBHuPwDS">forms</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">django</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Import the  <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code> models from <code class="code__2rdF32qjRVp7mMVBHuPwDS">.models</code></li>
</ul>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 3" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-3-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-3">3.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have imported the models, we can create the classes needed for later use when submitting data to the forms and creating the forms. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">To get started, create one class called <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreateForm</code>. Remember, this class should inherit from <code class="code__2rdF32qjRVp7mMVBHuPwDS">forms.ModelForm</code>.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 4" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-4-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-4">4.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Inside of our <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreateForm</code> class, we need to add in more information. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Create a nested <code class="code__2rdF32qjRVp7mMVBHuPwDS">Meta</code> class that contains a <code class="code__2rdF32qjRVp7mMVBHuPwDS">model</code> property assigned to <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">fields</code> assigned to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"__all__"</code> to display all of <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code>‘s fields.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 5" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-5-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-5">5.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have our <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreateForm</code> created, we’re going to want to do the same thing again for a class called <code class="code__2rdF32qjRVp7mMVBHuPwDS">AttractionCreateForm</code> for <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code>. </p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Moving on to Views</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 6" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-6-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-6">6.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Once <strong>forms.py</strong> has been built, we can start connecting that to the front end of our application. This will let Django render the form onto a template. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">To do this, we need to first navigate to <strong>views.py</strong>. Then:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">import over <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreateForm</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">AttractionCreateForm</code> from <code class="code__2rdF32qjRVp7mMVBHuPwDS">.forms</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">import <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code> </li>
</ul>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 7" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-7-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-7">7.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we imported what we need, we can start building the classes we need to link to a template. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Go ahead and create the first class, <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreate()</code> which will need <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code> as a parameter.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 8" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-8-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-8">8.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">The <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreate</code> class will have three properties that set what goes into the form. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">The three properties are:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><code class="code__2rdF32qjRVp7mMVBHuPwDS">model</code> set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><code class="code__2rdF32qjRVp7mMVBHuPwDS">form_class</code> set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreateForm</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx"><code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code> set as <code class="code__2rdF32qjRVp7mMVBHuPwDS">""</code> </li>
</ul>
<p class="p__1qg33Igem5pAgn4kPMirjw">You’ll change the value for <code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code> later! </p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 9" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-9-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-9">9.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreate</code> complete, we can start working on the <code class="code__2rdF32qjRVp7mMVBHuPwDS">AttractionCreate</code>. Go ahead and create the <code class="code__2rdF32qjRVp7mMVBHuPwDS">AttractionCreate</code> just like the <code class="code__2rdF32qjRVp7mMVBHuPwDS">StateCreate</code>. Make sure to include the <code class="code__2rdF32qjRVp7mMVBHuPwDS">CreateView</code> parameter and to include all the same 3 properties.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Modifying URLs</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 10" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-10-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-10">10.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that we have our views created, we can add our <code class="code__2rdF32qjRVp7mMVBHuPwDS">path()</code>s to our <strong>urls.py</strong> that use those views.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Start by navigating to <strong>urls.py</strong> and adding a <code class="code__2rdF32qjRVp7mMVBHuPwDS">path()</code> leading to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"state/create"</code>. This path should use the <code class="code__2rdF32qjRVp7mMVBHuPwDS">views.StateCreate.as_view()</code>. Add an appropriate name so it can be referenced later, like <code class="code__2rdF32qjRVp7mMVBHuPwDS">"statecreate"</code>.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 11" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-11-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-11">11.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Once the path is set up to create a <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code>, we can do the same thing for an <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code>. Create a path that uses <code class="code__2rdF32qjRVp7mMVBHuPwDS">"attraction/create"</code> along with the right view and give it a name of <code class="code__2rdF32qjRVp7mMVBHuPwDS">"attractioncreate"</code>.</p>
</div></div></div></article></div><h2 class="fit-full fcn-task-header">Adding Our Templates</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 12" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-12-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-12">12.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Since most of the back-end work is done, we can create our templates inside of <strong>templates/tourist_attractions/</strong>. This is where we’ll make everything we want the user to see and will house our forms. Both of these templates will be the same, so repeat these instructions for the second template.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Go ahead and create a template for <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> name the template <code class="code__2rdF32qjRVp7mMVBHuPwDS">state_create_form.html</code>. Inside of this template, we’ll need to:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Extend the template from <code class="code__2rdF32qjRVp7mMVBHuPwDS">"tourist_attractions/base.html"</code>. </li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Load in <code class="code__2rdF32qjRVp7mMVBHuPwDS">static</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Add a head block that will add in the same CSS file as in <strong>home.html</strong>.</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Finally, go ahead and create the content block for the template.</li>
</ul>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 13" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-13-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-13">13.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Inside of your content block, add a <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;h1&gt;</code> signifying whether users are creating a new state or new attraction. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Then add a <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> element that uses a <code class="code__2rdF32qjRVp7mMVBHuPwDS">csrf_token</code> and loads in the <code class="code__2rdF32qjRVp7mMVBHuPwDS">form.as_p</code> variable. Finally, add a submit button and close the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;form&gt;</code> element.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 14" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-14-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-14">14.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Once our template for <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> is created, we can move on to creating our <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code> template.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Create a new template for the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code> model. This time name the file, <code class="code__2rdF32qjRVp7mMVBHuPwDS">attraction_create_form.html</code>.</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">Once that’s created, go ahead and copy and paste everything from our <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> template to our <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code> template. Remember to change the <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;h1&gt;</code> text to now mention <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code>, but just like that we’ve created forms for our <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code> model!</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 15" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-15-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-15">15.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now that the templates are created, we can go back to our <strong>views.py</strong> and change the empty strings for both <code class="code__2rdF32qjRVp7mMVBHuPwDS">template_name</code> fields to their correlating templates.  </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">It also means that we will finally be able to render the template at the defined path! Remember the paths are:</p>
<pre class="pre__3_SOs7YT7NaHjnNunEArSM"><pre><code><div data-lang="codecademy-python" class="gamut-1oq8wcb-ColorizedContainer e1hgti5c0"><span><span class="mtk16"># urls.py</span></span><br><span><span class="mtk9">path</span><span class="mtk1">(</span><span class="mtk8">"state/create"</span><span class="mtk1">, </span><span class="mtk9">views</span><span class="mtk1">.</span><span class="mtk10">StateCreate</span><span class="mtk9">.</span><span class="mtk10">as_view</span><span class="mtk1">(), </span><span class="mtk9">name</span><span class="mtk1">=</span><span class="mtk8">"statecreate"</span><span class="mtk1">)</span></span><br><span><span class="mtk9">path</span><span class="mtk1">(</span><span class="mtk8">"attraction/create"</span><span class="mtk1">, </span><span class="mtk9">views</span><span class="mtk1">.</span><span class="mtk10">AttractionCreate</span><span class="mtk9">.</span><span class="mtk10">as_view</span><span class="mtk1">(), </span><span class="mtk9">name</span><span class="mtk1">=</span><span class="mtk8">"attractioncreate"</span><span class="mtk1">)</span></span><br></div></code></pre></pre>
<p class="p__1qg33Igem5pAgn4kPMirjw">We can find the respective templates at <code class="code__2rdF32qjRVp7mMVBHuPwDS">https://localhost/tourist_attractions/state/create</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">https://localhost/tourist_attractions/attraction/create</code>!</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Adding a Redirect</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 16" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-16-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-16">16.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">With the form now rendering properly, we want to make sure that when the user submits the data they are redirected to the homepage. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">To do this, we need to add a <code class="code__2rdF32qjRVp7mMVBHuPwDS">get_absolute_url()</code> method to both the <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> and <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code> models in <strong>models.py</strong>. Have the method return to the home page (<code class="code__2rdF32qjRVp7mMVBHuPwDS">"/tourist_attractions/"</code>) in both cases.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article></div><h2 class="fit-full fcn-task-header">Linking to the Forms</h2><div><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 17" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-17-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-17">17.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">While our forms have been created, the users don’t have a way to find them easily. But we want our users to be able to find them easily. </p>
<p class="p__1qg33Igem5pAgn4kPMirjw">To do this, we’re going to navigate to <strong>home.html</strong> and:</p>
<ul class="ul__11icM1EC_0uPj3OY0Skp4r">
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Under the closing <code class="code__2rdF32qjRVp7mMVBHuPwDS">&lt;/table&gt;</code> tag, add a link to our <code class="code__2rdF32qjRVp7mMVBHuPwDS">State</code> template</li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Set the <code class="code__2rdF32qjRVp7mMVBHuPwDS">href</code> set to <code class="code__2rdF32qjRVp7mMVBHuPwDS">"{% url 'statecreate' %}"</code></li>
<li class="li__1KqBjwbWA3ze6V0BvXq9Rx">Have the text read <code class="code__2rdF32qjRVp7mMVBHuPwDS">Add a state</code></li>
</ul>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 18" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-18-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-18">18.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">Now we can create another link to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">AttractionCreate</code> path.</p>
</div></div></div><div class="hintAccordion__AUYYhFg5_aKE6p4-XN_JN"><button aria-expanded="false" class="basicBtn__2_xxdSYwVIY18Fd5pq9JgS accordionButton__3LbMIquV93ec6TYv2l6mjX yellow__2olEZaNZdnw4sc3pSwo39e" data-btn="true"><span class="children__3aFTNwOnkG0i7uCSFwvYT5"><div class="accordionHeader__oSo2-lFMgoXgm-op6UgwW">Stuck? Get a hint</div></span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" role="img" aria-hidden="true" class="expansionIcon__3EAlubPR6T3-MPaeVEwyjl gamut-sd6ku5-Svg eol2zvm0"><title>Arrow Chevron Down Icon</title><path d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg></button><div class="gamut-1j727xk-StyledAccordionBody eg6ri2w0" style="height: 0px;"></div></div></article><article class="fit-full fcn-task fcn-task--complete"><div class="gamut-1m02y73-FlexBox e1tc6bzh0"><div class="gamut-1efsrtw-Box ebnwbv90"><div aria-checked="true" aria-label="Task item 19" class="fcn-task__check fcn-task__check--checked centeredCheckbox__1W1qWOG2Q-u0MepObrJcAW" data-cue="discovery-checklist" role="checkbox" tabindex="0" data-testid="task-19-checkbox"><svg viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true" class="gamut-sd6ku5-Svg eol2zvm0"><title>Check Icon</title><path fill-rule="evenodd" clip-rule="evenodd" d="M23.552 3.93a1.5 1.5 0 01.017 2.122l-13.778 14a1.5 1.5 0 01-2.056.077L.513 13.813a1.5 1.5 0 011.974-2.258l6.158 5.385L21.431 3.948a1.5 1.5 0 012.121-.017z" fill="currentColor"></path></svg></div></div><div class="gamut-dtzm1a-Box ebnwbv90"><span class="fcn-task__number" data-testid="task-19">19.</span></div><div><div data-testid="markdown" class="spacing-tight__2Gp7GTqG0TykPQ18OnUOVt markdown__32VfO5X72_8Hgq-lL1FiEX narrativeMarkdown__1cZwP15puGqXLhyVZJNyl8 scrollable__1-jywZRZj22_LBy_6XsFe4"><p class="p__1qg33Igem5pAgn4kPMirjw">And that’s it, congrats! We’ve now created two forms for adding any states or attractions. Try out your forms, first create a state, then create an attraction. Watch your home page populate!</p>
<p class="p__1qg33Igem5pAgn4kPMirjw">If you want, try adding some more fields to the models in <strong>models.py</strong> that you think would be useful and add those to the forms as well! One field you could add would be to add the city to the <code class="code__2rdF32qjRVp7mMVBHuPwDS">Attraction</code> model. You can also add in other forms for updating and deleting instances as well! </p>
</div></div></div></article></div></div>


<h3>Solution</h3>




